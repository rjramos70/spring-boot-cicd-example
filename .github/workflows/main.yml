# Name of the workflow
name: Build & Deploy Spring app

# When to trigger this action
on:
  push:
    branches:
      - main

# The job that will run for this action
jobs:
  build-deploy:
    name: Build and Deploy Spring Boot CI/CD example
    # Define the runner, is the machine that where you want or which you want to run these actions
    runs-on: ubuntu-latest
    steps:
        # Create the checkout
      - name: Checkout code
        uses: actions/checkout@v4

        # Set up the Java SDK
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

        # Run the first step which is the tests
      - name: Run Unit Tests
        run: mvn -B test --file pom.xml
        # run: mvn test

        # Now let's clean and package our application
      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml

        # Create a docker image out of our application, we will have
        # a container containing our .jar file application and then we will
        # deploy it or publish it on the Docker Hub.
      - name: Build Docker image
        uses: actions/build-push-action@v2
#        uses: docker/build-push-action@v6
        with:
          context: .
#          dockerfile: Dockerfile
          file: ./Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-cicd-example:$(date-'%Y-%m-%d%H-%M-%S')

        # Connect to Docker
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        # Push the image to Docker Hub
      - name: Push image to Docker Hub
        uses: actions/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-cicd-example:$(date-'%Y-%m-%d%H-%M-%S')

